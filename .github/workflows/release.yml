name: Release ClickOnce App

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  # Use latest stable .NET 8

      - name: Restore NuGet Packages
        run: dotnet restore

      - name: Install Missing Package
        run: dotnet add package Microsoft.Net.Sdk.Compilers.Toolset

      - name: Restore NuGet Packages Again
        run: dotnet restore

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Build ClickOnce App
        run: |
          "C:\Program Files\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin\MSBuild.exe" inoVBATools.sln /p:Configuration=Release /target:publish /p:PublishDir=${{ github.workspace }}\bin\Release\publish

      - name: Locate signtool.exe
        run: |
          dir "C:\Program Files (x86)\Windows Kits\10\bin\*" /s /b | findstr signtool.exe || echo "signtool.exe not found"
        shell: cmd

      - name: Install Windows SDK (if required)
        run: |
          Invoke-WebRequest -Uri https://go.microsoft.com/fwlink/?linkid=2120843 -OutFile winsdksetup.exe
          Start-Process .\winsdksetup.exe -ArgumentList "/quiet", "/norestart" -Wait
        shell: powershell

      - name: Import Code-Signing Certificate
        shell: powershell
        run: |
          $certContent = [System.Convert]::FromBase64String("${{ secrets.CODE_SIGN_CERT }}")
          [System.IO.File]::WriteAllBytes("cert.pfx", $certContent)

      - name: Sign Executable
        run: |
          $signtoolPath = "C:\Program Files (x86)\Windows Kits\10\bin\10.0.26100.0\x86\signtool.exe"
          if (-Not (Test-Path $signtoolPath)) {
            Write-Error "signtool.exe not found at $signtoolPath"
            exit 1
          }
          &$signtoolPath sign `
            /f cert.pfx `
            /p ${{ secrets.CODE_SIGN_PASSWORD }} `
            /tr http://timestamp.digicert.com `
            /td sha256 `
            /fd sha256 `
            /a ${{ github.workspace }}\bin\Release\publish\inoVBATools.exe
        shell: powershell

      - name: Zip ClickOnce Files
        run: |
          Compress-Archive -Path ${{ github.workspace }}\bin\Release\publish\* -DestinationPath inoVBATools-release-${{ github.ref_name }}.zip
        shell: powershell

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: inoVBATools Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: |
            This release contains the inoVBATools.exe deployment files for version ${{ github.ref_name }}.
          files: inoVBATools-release-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
